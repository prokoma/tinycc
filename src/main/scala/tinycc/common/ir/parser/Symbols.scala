package tinycc.common.ir.parser

object Symbols {
  val inc: Symbol = Symbol("++")
  val dec: Symbol = Symbol("--")
  val add: Symbol = Symbol("+")
  val sub: Symbol = Symbol("-")
  val mul: Symbol = Symbol("*")
  val div: Symbol = Symbol("/")
  val mod: Symbol = Symbol("%")
  val shiftLeft: Symbol = Symbol("<<")
  val shiftRight: Symbol = Symbol(">>")
  val eq: Symbol = Symbol("==")
  val ne: Symbol = Symbol("!=")
  val lt: Symbol = Symbol("<")
  val gt: Symbol = Symbol(">")
  val le: Symbol = Symbol("<=")
  val ge: Symbol = Symbol(">=")
  val bitAnd: Symbol = Symbol("&")
  val bitOr: Symbol = Symbol("|")
  val and: Symbol = Symbol("&&")
  val or: Symbol = Symbol("||")
  val not: Symbol = Symbol("!")
  val neg: Symbol = Symbol("~")
  val bitXor: Symbol = Symbol("^")
  val dot: Symbol = Symbol(".")
  val semicolon: Symbol = Symbol(";")
  val colon: Symbol = Symbol(":")
  val arrowR: Symbol = Symbol("->")
  val comma: Symbol = Symbol(",")
  val parOpen: Symbol = Symbol("(")
  val parClose: Symbol = Symbol(")")
  val squareOpen: Symbol = Symbol("[")
  val squareClose: Symbol = Symbol("]")
  val curlyOpen: Symbol = Symbol("{")
  val curlyClose: Symbol = Symbol("}")
  val assign: Symbol = Symbol("=")
  val backtick: Symbol = Symbol("`")

  val kwFn: Symbol = Symbol("fn")
  val kwLabel: Symbol = Symbol("label")
  val kwI64: Symbol = Symbol("i64")
  val kwDouble: Symbol = Symbol("double")
  val kwVoid: Symbol = Symbol("void")
  val kwPtr: Symbol = Symbol("ptr")
  val kwStruct: Symbol = Symbol("struct")
}
